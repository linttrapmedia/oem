"use strict";(()=>{var st=Object.defineProperty,it=Object.defineProperties;var rt=Object.getOwnPropertyDescriptors;var P=Object.getOwnPropertySymbols;var at=Object.prototype.hasOwnProperty,yt=Object.prototype.propertyIsEnumerable;var j=(t,n,l)=>n in t?st(t,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):t[n]=l,C=(t,n)=>{for(var l in n||(n={}))at.call(n,l)&&j(t,l,n[l]);if(P)for(var l of P(n))yt.call(n,l)&&j(t,l,n[l]);return t},I=(t,n)=>it(t,rt(n));var F=new Map,ct=new MutationObserver(t=>{t.forEach(n=>{if(n.addedNodes.length>0&&n.type==="childList"){for(let l of n.addedNodes)if(l instanceof Element)for(let[o,[s,i]]of F.entries()){let p=l.querySelectorAll(o);for(let r of p)A(r,s,i)}}})});ct.observe(document,{attributes:!0,childList:!0,subtree:!0});function pt(t,n=!0,l){return(...o)=>{n&&F.set(t,[o,l]);let s=document.querySelectorAll(t);for(let i of s)A(i,o,l)}}function dt(t,n){return(...l)=>A(t,l,n)}function ut(t,n){return(...l)=>{let o="http://www.w3.org/1999/xhtml",s=document.createElementNS(o,t);return A(s,l,n)}}function A(t,n=[],l={}){n.forEach(([s,...i])=>l[s](t,...i));function o(...s){return s.forEach(i=>t.append(i)),t}return o}function E(t){return new Proxy({},{get:(n,l)=>l==="el"?o=>dt(o,t):l==="$el"?(o,s)=>pt(o,s,t):ut(l,t)})}function H(t){let{event:n=null,eventElement:l=window,hideOnFalse:o=!0,invokeImmediately:s=!0,mediaMinWidth:i=0,mediaMaxWidth:p=1/0,state:r=void 0}=t!=null?t:{};return(...a)=>{let[y,b,g,x]=a,h=()=>{if(!(window.innerWidth>=i&&window.innerWidth<=p))return;let c=r&&typeof g=="function"?g(r.get()):g,u=String(c)==="true"||String(c)==="false",w=typeof x=="function"?x(r?r.get():void 0):x!=null?x:!0;if(u&&o&&String(c)==="false"||u&&w===!1)return y.removeAttribute(b);w!==!1&&y.setAttribute(b,String(c))};r&&r.sub(h),n&&(y!=null?y:l).addEventListener(n,h),window.addEventListener("resize",h),s&&h()}}function G(t,n=[],l={}){n.forEach(([s,...i])=>l[s](t,...i));function o(...s){return s.forEach(i=>t.append(i)),t}return o}function z(t){return new Proxy({},{get:(n,l)=>l==="el"?o=>(...s)=>G(o,s,t):(...o)=>{let s="http://www.w3.org/2000/svg",i=document.createElementNS(s,l);return G(i,o,t)}})}var k=t=>(n,l,o)=>{(typeof o=="function"?o():o!=null?o:!0)&&n.addEventListener(t,l)};function m(t){let{event:n=null,eventElement:l=window,invokeImmediately:o=!0,mediaMinWidth:s=0,mediaMaxWidth:i=1/0,state:p=void 0}=t!=null?t:{};return(...r)=>{let[a,y,b,g]=r,x=()=>{if(!(window.innerWidth>=s&&window.innerWidth<=i))return;let v=String(typeof b=="function"?b(p?p.get():void 0):b);(typeof g=="function"?g(p?p.get():void 0):g!=null?g:!0)&&(y.startsWith("--")?a.style.setProperty(y,v):a.style[y]=v)};p&&p.sub(x),window.addEventListener("resize",x),n&&(a!=null?a:l).addEventListener(n,x),o&&!n&&x()}}function _(t){let{event:n,eventElement:l,state:o}=t!=null?t:{};return(...s)=>{let[i,p,r]=s,a=()=>{let y=typeof p=="function"?p(o?o.get():void 0):p;(typeof r=="function"?r(o?o.get():void 0):r!=null?r:!0)&&(i.textContent=String(y))};o&&o.sub(a),window.addEventListener("resize",a),n&&(i!=null?i:l).addEventListener(n,a),a()}}function mt(t,n,l){let o=n.split("."),s=(i,p,r)=>{let[a,...y]=p;return y.length===0?Array.isArray(i)?[...i.slice(0,a),r,...i.slice(a+1)]:I(C({},i),{[a]:r}):(i[a]===void 0&&(i[a]=typeof y[0]=="number"?[]:{}),I(C({},i),{[a]:s(i[a],y,r)}))};return s(t,o,l)}function W(t,n){var h,v;let l=t;if(n){let c=n.storage.getItem(n.key),u=JSON.parse(c),w=u!=null;((h=n.overwrite)!=null?h:!0)&&w&&(t=u),!((v=n.overwrite)==null||v)&&w&&(Array.isArray(t)&&Array.isArray(u)?t=[...t,...u]:typeof t=="object"&&typeof u=="object"&&(t=C(C({},t),u)))}let o=t,s=[],i=()=>o,p=()=>s.forEach(c=>c(o)),r=c=>()=>y(c(o)),a=()=>y(l),y=c=>{o=c,s.forEach(u=>u(o)),n&&n.storage.setItem(n.key,JSON.stringify(o))};return{deepSet:(c,u)=>y(mt(o,c,u)),get:i,pub:p,reset:a,reduce:r,set:y,sub:c=>s.push(c),unsub:c=>s.splice(s.indexOf(c),1)}}var ft=()=>t=>{t.style.whiteSpace="pre",t.style.fontFamily="monospace",t.style.color="white",t.style.backgroundColor="black",t.style.padding="30px",t.style.borderRadius="5px",t.style.overflow="auto",t.style.maxWidth="100%",t.style.width="100%",t.style.boxSizing="border-box";let n=new MutationObserver(l=>{l.forEach(o=>{if(o.type==="childList"&&o.addedNodes.length>0){n.disconnect();let s=Prism.highlight(t.innerText,Prism.languages.typescript);t.innerHTML=s}})});return n.observe(t,{childList:!0}),t},{a:d,button:L,code:Yt,div:e,el:N,img:O,pre:D,span:T,$el:U}=E({attr:H(),click:k("click"),prism:ft(),style:m(),"style:tablet":m({mediaMinWidth:960}),"style:mouseover":m({event:"mouseover"}),"style:mouseout":m({event:"mouseout"})}),B=z({attr:H(),style:m(),click:k("click"),"style:mouseover":m({event:"mouseover"}),"style:mouseout":m({event:"mouseout"})});var R=()=>{let t=document.createElement("button");return U("#myButton,.myButton")(["click",()=>alert("Click works!")],["style","backgroundColor","black"],["style","borderRadius","4px"],["style","border","none"],["style","color","white"],["style","cursor","pointer"],["style","fontSize","18px"],["style","padding","10px 20px"],["style:mouseover","backgroundColor","red"],["style:mouseout","backgroundColor","black"]),e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","30px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("Adopting Elements"),e(["style","opacity",.5],["style","textAlign","center"])("OEM also allows you to adopt elements into its callback pipeline. This is useful for integrating OEM into existing projects, manipulating the DOM or for building out custom components. See the ",d(["attr","href","https://domx.js.org"],["attr","target","_blank"])("domx")," library for examples"),e()(),e(["style","fontSize","21px"],["style","textAlign","center"])("Adopt An Element By Instance"),e(["prism"])(`const { el } = HTML({ style: useStyle() });
  
const myButton = document.getElementById('#my-button');
  
el(myButton)(
  ['click', () => alert('Hello World')],
  ['style', 'backgroundColor', 'black'],
  ['style', 'borderRadius', '4px'],
  ['style', 'border', 'none'],
  ['style', 'color', 'white'],
  ['style', 'cursor', 'pointer'],
  ['style', 'fontSize', '18px'],
  ['style', 'padding', '10px 20px'],
  ['style:mouseover', 'backgroundColor', 'red'],
  ['style:mouseout', 'backgroundColor', 'black'],
)();`),N(t)(["click",()=>alert("Click works!")],["style","backgroundColor","black"],["style","borderRadius","4px"],["style","border","none"],["style","color","white"],["style","cursor","pointer"],["style","fontSize","18px"],["style","padding","10px 20px"],["style:mouseover","backgroundColor","red"],["style:mouseout","backgroundColor","black"])("Hello World"),e()(),e(["style","fontSize","21px"],["style","textAlign","center"])("Or Adopt By Using Selectors"),e(["style","opacity",.5],["style","textAlign","center"])("This helps target elements on or after load as well as adopt multiple elements at once."),e(["prism"])(`const { $el } = HTML({ ... });
$el('#myButton')(...);
$el('.myButton')(...);`),e(["style","display","flex"],["style","gap","20px"],["style","justifyContent","center"],["style","flexDirection","column"],["style:tablet","flexDirection","row"])(L(["attr","id","myButton"])("#myButton"),L(["attr","class","myButton"])(".myButton (1)"),L(["attr","class","myButton"])(".myButton (2)"))))};var xt=()=>{let t=W(1),n=t.reduce(i=>i+1),l=()=>`#${t.get()}`,o=()=>t.get()%2===0?"red":"black",{div:s}=E({"text:count":_({state:t}),"event:click":k("click"),"style:click":m({event:"click"}),"style:mobile":m({mediaMinWidth:0}),"style:tablet":m({mediaMinWidth:960})});return s(["text:count",l],["event:click",n],["style:click","color",o],["style:mobile","cursor","pointer"],["style:mobile","display","flex"],["style:mobile","gap","10px"],["style:mobile","fontSize","50px"],["style:tablet","fontSize","80px"])()},V=()=>e(["style","alignItems","center"],["style","backgroundColor","rgba(255,255,255,0.2)"],["style","boxSizing","border-box"],["style","borderRadius","5px"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"],["style","padding","50px"],["style","width","100%"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("Click The Number"),xt()));var M=t=>T(["style","fontFamily","monospace"],["style","fontWeight","bold"],["style","opacity",1],["style","backgroundColor","rgba(0,0,0,0.2)"])(t);var Y=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("You Can Write Your Own Traits (And You Should!)"),e(["style","opacity",.5],["style","textAlign","center"])(`Creating a custom trait is easy to do and gives you a powerful abstraction for code reuse throughout your application. Here's an example of a simple "FlexBox" trait.`),e(["style","fontSize","21px"],["style","textAlign","center"])("Step 1: Create The Trait"),e(["style","opacity",.5],["style","textAlign","center"])("This is all it takes to create a custom trait. Create a function with an HTMLElement element as the first argument. You can also optionally follow that with any other parameters you want to make available to you when you use your trait."),e(["prism"])(`const useMyFlexBox = (el: HTMLElement, dir: 'row' | 'column') => {
  el.style.display = 'flex';
  el.style.flexDirection = direction;
}`),e(["style","fontSize","21px"],["style","textAlign","center"])("Step 2: Attach The Trait To Your Template"),e(["style","opacity",.5],["style","textAlign","center"])("You attach the trait to your template like so. In this case 'flex' is user-defined and will be the name of your trait available to you in your tag function"),e(["prism"])(`const { div } = HTML({
  'flex': useMyFlexBox,
});`),e(["style","fontSize","21px"],["style","textAlign","center"])("Step 3: Using The Trait"),e(["style","opacity",.5],["style","textAlign","center"])("When using the div tag function from your template, 'flex' should be auto-magically intellisensed as well as the rest of the parameters of the ",M("useMyFlexBox")," function"),e(["prism"])(`div(['flex', 'row'])("Hello World");`)));var $=t=>e(["style","backgroundColor","rgba(0,0,0,0.1)"],["style","padding","10px"])(t),S=(...t)=>e(["style","padding","10px"],["style","borderBottom","1px solid rgba(0,0,0,0.1)"],["style","fontSize","13px"],["style:tablet","fontSize","16px"])(...t),J=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("FAQ & More"),e(["style","opacity",.5],["style","textAlign","center"])("OEM can do a lot more than you might think. Here are some common issues and commonly asked questions."),e(["style","borderRadius","5px"],["style","boxSizing","border-box"],["style","display","grid"],["style","gridTemplateColumns","1fr 1fr"],["style","width","100%"])($("Question"),$("Answer"),S("Is it secure?"),S("There is no insert html functionality"),S("What's a good use case?"),S("Creating web apps or web components or writing DOM manipulation code in a much more sane way"),S('Why is it said to be "AI friendly"?'),S("The LOB syntax is formulaic and declarative which makes it easy for AI to parse and understand. Therefore your IDE AI tools have no problem providing you with helpful suggestions and auto-completions. Also, theoretically speaking, the trait pattern gives you the ability to create a DSL that would/could train your own model against."),S("Does it support SVG?"),S("Yep, just use ",M("SVG")," instead of ",M("HTML")," as your template function"))));var Q=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","borderRadius","5px"],["style","display","grid"],["style","display","flex"],["style","flexWrap","wrap"],["style","fontFamily","Space Grotesk"],["style","gap","10px"],["style","justifyContent","center"],["style","padding","20px"],["style","width","100%"],["style","backgroundColor","black"])(...[["\u{1F4AB}","Reactive DOM"],["\u{1F485}","Responsive Styles"],["\u{1F4FC}","State Management"],["\u{1F54A}\uFE0F","No Dependencies"],["\u{1FAB6}","Flyweight Size"],["\u{1F9F1}","Isomorphic Syntax"],["\u{1F9E9}","Typescript"],["\u{1F916}","AI-Friendly"],["\u{1F512}","Secure"],["\u{1F9EA}","100% Test Coverage"],["\u{1F4A9}","No Virtual DOM"]].map(([t,n])=>e(["style","alignItems","center"],["style","backgroundColor","transparent"],["style","boxSizing","border-box"],["style","borderRadius","20px"],["style","cursor","pointer"],["style","display","flex"],["style","fontSize","13px"],["style","gap","10px"],["style","justifyContent","center"],["style:mouseover","backgroundColor","white"],["style:mouseover","color","black"],["style:mouseout","backgroundColor","transparent"],["style:mouseout","color","white"],["style","border","none"],["style","padding","0"],["style:tablet","border","1px solid rgba(255,255,255,0.3)"],["style:tablet","padding","5px 10px"],["style","color","white"])(T(["style","fontSize","11px"])(t),T(["style","fontWeight","bold"])(n))));var gt=new Date,q=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("OEM"),e(["style","opacity",.5],["style","textAlign","center"])(`\xA9Copyright ${gt.getFullYear()} All rights reserved.`," Made in the USA \u{1F1FA}\u{1F1F8} by ",d(["attr","href","http://kevinlint.com"],["attr","target","_blank"],["style","color","black"],["style:mouseover","color","blue"],["style:mouseout","color","black"])("Kevin Lint")," as a product of ",d(["attr","href","http://linttrap.media"],["attr","target","_blank"],["style","color","black"],["style:mouseover","color","blue"],["style:mouseout","color","black"])("Lint Trap Media."))));var K={name:"@linttrap/oem",author:"@linttrapmedia",title:"oem",version:"0.1.7",description:"A novel UI library for writing reactive html with vanilla javascript",type:"module",exports:{".":"./src/index.ts"},main:"./src/index.ts",module:"./src/index.ts",repository:{type:"git",url:"git+https://github.com/linttrapmedia/oem.git"},license:"MIT",bugs:{url:"https://github.com/linttrapmedia/oem/issues"},homepage:"https://oem.js.org",devDependencies:{"@types/node":"^18.13.0",esbuild:"^0.14.27",jsdom:"^21.1.0",prettier:"2.7.1"}};var X=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","fontFamily","Space Grotesk"],["style","justifyContent","center"],["style","padding","50px 50px 0"],["style","width","100%"],["style","padding","50px 20px 0"],["style:tablet","padding","50px 50px 0"])(d(["attr","href","https://github.com/linttrapmedia/oem"],["attr","target","_blank"],["style","alignItems","flex-start"],["style","background","linear-gradient(45deg, rgba(0,0,0,0.2) 50%, black 50%)"],["style","height","75px"],["style","justifyContent","flex-end"],["style","position","absolute"],["style","right",0],["style","top",0],["style","width","75px"],["style","display","flex"])(O(["attr","src","assets/gfx/github.svg"],["style","opacity",.5],["style","width","45%"],["style","padding","5px"])()),e(["style","display","flex"],["style","flexDirection","column"],["style","gap","30px"],["style","alignItems","center"],["style","justifyContent","center"])(e(["style","display","flex"],["style","letterSpacing","2px"],["style","fontSize","75px"],["style","textAlign","center"],["style","lineHeight",.75],["style","color","black"],["style","fontFamily","Splash"],["style","gap","5px"])("oem",T(["style","fontSize","10px"],["style","fontWeight","bold"],["style","fontFamily","monospace"],["style","letterSpacing","0"])(K.version)),e(["style","fontSize","52px"],["style","lineHeight",1],["style","margin","0px 20px 10px 20px"],["style","borderRadius","10px"],["style","textAlign","center"],["style","fontSize","32px"],["style:tablet","fontSize","52px"])("A novel UI library for writing reactive html in vanilla javascript")));var Z=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("How It Works"),e(["style","opacity",.5],["style","textAlign","center"])('OEM works by introducing the idea of creating your own template engine(s) which exist as a middle layer between your state and your DOM. The result is small units of code that follow the "Locality of Behavior" principle (code behavior is defined close to where it is used). ',d(["attr","href","https://htmx.org/essays/locality-of-behaviour/"],["attr","target","_blank"])("\u{1F3F9} LOB")),e(["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","justifyContent","center"],["style","gap","20px"],["style","width","100%"],["style:tablet","flexDirection","row"])(e(["style","display","flex"],["style","flexDirection","column"],["style","width","100%"],["style:tablet","width","50%"])(e(["style","textAlign","center"])("Step 1: Define State and Your Template Engine"),D(["prism"])(`const count = State(1);
const count_inc = count.reduce((i) => i + 1);
const count_text = () => \`#\${count.get()}\`;
const count_color = () => (count.get() % 2 === 0 ? 'red' : 'black');

const { div } = HTML({
  'text:count': useText({state: count}),
  'event:click': useEvent('click'),
  'style:click': useStyle({ event: 'click' }),
  'style:mobile': useStyle({ mediaMinWidth: 0 }),
  'style:tablet': useStyle({ mediaMinWidth: 960 }),
});`)),e(["style","display","flex"],["style","flexDirection","column"],["style","width","100%"],["style:tablet","width","50%"])(e(["style","textAlign","center"])("Step 2:  Generate Your Reactive UI"),D(["prism"])(`div(
  ['text:count', count_text],
  ['event:click', count_inc],
  ['style:click', 'color', count_color],
  ['style:mobile', 'cursor', 'pointer'],
  ['style:mobile', 'display', 'flex'],
  ['style:mobile', 'gap', '10px'],
  ['style:mobile', 'fontSize', '50px'],
  ['style:tablet', 'fontSize', '80px'],
)()`)))));var tt=()=>e(["style","flexDirection","column"],["style","gap","30px"],["style:tablet","flexDirection","row"],["style:tablet","gap","30px"],["style:tablet","padding","0px"],["style","alignItems","center"],["style","display","flex"],["style","fontFamily","Space Grotesk"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","border","2px solid black"],["style","borderRadius","20px"],["style","boxSizing","border-box"],["style","boxShadow","20px 20px 0px black"],["style","display","grid"],["style","flexWrap","wrap"],["style","justifyContent","center"],["style","padding","20px"],["style","textAlign","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("Charter"),e(["style","padding","20px 0"],["style","opacity",.5])("To create a standards-compliant, lightweight DOM library that could serve as a layer-one utility library for building out sophisticated web apps and components.")),e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","grid"],["style","flexWrap","wrap"],["style","gap","20px"],["style","justifyContent","center"],["style","padding","20px"],["style","width","100%"],["style:tablet","borderRight","1px dashed black"],["style","borderRight","none"],["style","borderBottom","1px dashed black"],["style:tablet","borderBottom","none"])(e(["style","fontSize","32px"],["style","textAlign","center"])("Install"),e(["prism"])("npm i @linttrap/oem"),e(["style","opacity",.35],["style","fontSize","14px"],["style","textAlign","center"])("Or download with unpkg at ",d(["attr","href","https://unpkg.com/@linttrap/oem@latest/dist/oem.min.js"],["attr","target","_blank"])("unpkg"))));var et=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","20px"],["style","justifyContent","center"],["style","fontFamily","Space Grotesk"])(e(["style","fontSize","32px"],["style","textAlign","center"])("How Is This Better?"),e(["style","opacity",.5],["style","textAlign","center"])("The code above is: State, Templating, Event Handling, Styling, Typing (both for your template engine's trait functions and styles!) all in one. This is a powerful combination that allows you to build complex applications with a small amount of code. Additionally, you will be reusing your state and template code. So really it's just the code in Step 2 that you should be comparing to other frameworks. Show me another framework where you can define state, responsive styling, html and event handling in 10 lines of vanilla js backed by framework that is ~50 LOC that you can understand in 15 minutes."));var nt=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])("Works With SVG Too"),e(["style","opacity",.5],["style","textAlign","center"])("Working with SVG is just as easy as working with HTML. Just use the SVG function instead of the HTML function."),e(["style","fontSize","21px"],["style","textAlign","center"])("Example"),B.svg(["attr","height","50"],["attr","width","200"],["click",()=>alert("You clicked me!")],["style","backgroundColor","black"],["style","borderRadius","5px"],["style","cursor","pointer"],["style","fill","white"],["style","transition","all 0.3s, fill 0.3s"],["style:mouseout","backgroundColor","black"],["style:mouseover","backgroundColor","red"])(B.text(["attr","x",100],["attr","y",30],["style","textAnchor","middle"])("Click Me")),e(["style","fontSize","21px"],["style","textAlign","center"])("Source"),e(["prism"])(`svg(
    ['attr', 'height', '50'],
    ['attr', 'width', '200'],
    ['click', () => alert('You clicked me!')],
    ['style', 'backgroundColor', 'black'],
    ['style', 'borderRadius', '5px'],
    ['style', 'cursor', 'pointer'],
    ['style', 'fill', 'white'],
    ['style', 'transition', 'all 0.3s, fill 0.3s'],
    ['style:mouseout', 'backgroundColor', 'black'],
    ['style:mouseover', 'backgroundColor', 'red'],
)(text(
    ['attr', 'x', 100], 
    ['attr', 'y', 30], 
    ['style', 'textAnchor', 'middle'])('Click Me'))`)));var ot=t=>e(["style","backgroundColor","rgba(0,0,0,0.1)"],["style","padding","10px"])(t),f=t=>e(["style","padding","10px"],["style","borderBottom","1px solid rgba(0,0,0,0.1)"],["style","fontSize","13px"],["style:tablet","fontSize","16px"])(t),lt=()=>e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(e(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(e(["style","fontSize","32px"],["style","textAlign","center"])(`It's All About "Traits"`),e(["style","opacity",.5],["style","textAlign","center"])("Traits are small testable functions that are responsible for attaching behaviors to html elements. OEM comes with a handful of traits out of the box, but you can easily write your own."),e(["style","borderRadius","5px"],["style","boxSizing","border-box"],["style","display","grid"],["style","gridTemplateColumns","1fr 1fr"],["style","width","100%"])(ot("Trait"),ot("Description"),f(d(["attr","href","https://github.com/linttrapmedia/oem/blob/main/src/html/traits/Style.ts"],["attr","target","_blank"])("useAttribute")),f("Apply attributes"),f(d(["attr","href","https://github.com/linttrapmedia/oem/blob/main/src/html/traits/ClassName.ts"],["attr","target","_blank"])("useClassName")),f("Apply class names"),f(d(["attr","href","https://github.com/linttrapmedia/oem/blob/main/src/html/traits/Event.ts"],["attr","target","_blank"])("useEvent")),f("Attach event listener"),f(d(["attr","href","https://github.com/linttrapmedia/oem/blob/main/src/html/traits/InnerHTML.ts"],["attr","target","_blank"])("useInnerHTML")),f("Attach event listener"),f(d(["attr","href","https://github.com/linttrapmedia/oem/blob/main/src/html/traits/Text.ts"],["attr","target","_blank"])("useText")),f("Apply inner text"),f(d(["attr","href","https://github.com/linttrapmedia/oem/blob/main/src/html/traits/Style.ts"],["attr","target","_blank"])("useStyle")),f("Apply styles"))));function ht(){return e(["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","boxSizing","border-box"],["style","padding","20px 20px 100px"],["style","margin","auto"],["style","maxWidth","1024px"])(X(),Q(),tt(),V(),Z(),et(),lt(),Y(),R(),nt(),J(),q())}document.addEventListener("DOMContentLoaded",()=>{let t=document.getElementById("root");if(!t)return null;t.appendChild(ht())});})();
//# sourceMappingURL=bundle.min.js.map
