"use strict";(()=>{function HtmlTag(tag,traits=[],config={}){let ns="http://www.w3.org/1999/xhtml",el=document.createElementNS(ns,tag);traits.forEach(([trait,...args])=>config[trait](el,...args));function fn(...children){return children.forEach(child=>el.append(child)),el}return fn}function HTML(config){return new Proxy({},{get:(_,tag)=>(...props)=>HtmlTag(tag,props,config)})}var useEvent=evt=>(el,cb,condition)=>{(typeof condition=="function"?condition():condition!=null?condition:!0)&&el.addEventListener(evt,cb)};var useText=({state}={})=>(el,text,condition)=>{let apply=()=>{let _text=String(typeof text=="function"?text():text);(typeof condition=="function"?condition():condition!=null?condition:!0)&&(el.textContent=_text)};state&&state.sub(apply),apply()};var useAttribute=({event=null,eventElement=window,invokeImmediately=!0,mediaMinWidth=0,mediaMaxWidth=1/0,state=null}={})=>(el,prop,val,condition)=>{let apply=()=>{if(!(window.innerWidth>=mediaMinWidth&&window.innerWidth<=mediaMaxWidth))return;let _val=String(typeof val=="function"?val():val);(typeof condition=="function"?condition():condition!=null?condition:!0)&&el.setAttribute(prop,_val)};state&&state.sub(apply),event&&(el!=null?el:eventElement).addEventListener(event,apply),window.addEventListener("resize",apply),invokeImmediately&&apply()};var useStyle=({event=null,eventElement=window,invokeImmediately=!0,mediaType="screen",mediaMinWidth=0,mediaMaxWidth=1/0,state=null}={})=>{let fingerPrint=(Math.random()*1e8).toFixed(0),printId="print-style-"+fingerPrint,style=document.getElementById(printId);style||(style=document.createElement("style"),style.id=printId,style.setAttribute("type","text/css"),style.setAttribute("media","print"),mediaType==="print"&&document.getElementsByTagName("head")[0].appendChild(style));let sheet=style.sheet;return(el,prop,val,condition)=>{var _a;mediaType==="print"&&(el.dataset.printId=(_a=el.dataset.printId)!=null?_a:(Math.random()*1e8).toFixed(0));let apply=()=>{if(mediaType==="print"){let selector=prop+"-"+el.dataset.printId,_val=String(typeof val=="function"?val():val),propFmt=prop.replace(/([A-Z])/g,"-$1").toLowerCase();sheet.insertRule(`.${selector} { ${propFmt}:${_val} !important; }`,0),el.classList.add(selector)}else{if(!(window.innerWidth>=mediaMinWidth&&window.innerWidth<=mediaMaxWidth))return;let _val=String(typeof val=="function"?val():val);(typeof condition=="function"?condition():condition!=null?condition:!0)&&(el.style[prop]=_val)}};state&&state.sub(apply),event&&(el!=null?el:eventElement).addEventListener(event,apply),window.addEventListener("resize",apply),invokeImmediately&&apply()}};function State(param){let originalParam=param,_param=param,_subscribers=[],_get=()=>_param,_reduce=cb=>()=>_set(cb(_param)),_reset=()=>_set(originalParam),_set=param2=>(_param=param2,_subscribers.forEach(i=>i(_param)));return{get:_get,reset:_reset,reduce:_reduce,set:_set,sub:cb=>_subscribers.push(cb),unsub:cb=>_subscribers.splice(_subscribers.indexOf(cb),1)}}var usePrism=()=>el=>{el.style.whiteSpace="pre",el.style.fontFamily="monospace",el.style.color="white",el.style.backgroundColor="black",el.style.padding="30px",el.style.borderRadius="5px",el.style.overflow="auto",el.style.maxWidth="100%",el.style.width="100%",el.style.boxSizing="border-box";let observer=new MutationObserver(mutations=>{mutations.forEach(mutation=>{if(mutation.type==="childList"&&mutation.addedNodes.length>0){observer.disconnect();let formattedCode=Prism.highlight(el.innerText,Prism.languages.typescript);el.innerHTML=formattedCode}})});return observer.observe(el,{childList:!0}),el},{a,button,code,div,img,pre,span}=HTML({attr:useAttribute(),on_click:useEvent("click"),prism:usePrism(),style:useStyle(),"style:tablet":useStyle({mediaMinWidth:960}),"style:mouseover":useStyle({event:"mouseover"}),"style:mouseout":useStyle({event:"mouseout"})});var Counter=()=>{let count=State(1),count_inc=count.reduce(i=>i+1),count_text=()=>`#${count.get()}`,count_color=()=>count.get()%2===0?"red":"black",{div:div2}=HTML({"text:count":useText({state:count}),"click:event":useEvent("click"),"click:style":useStyle({event:"click"}),"mobile:style":useStyle({mediaMinWidth:0}),"tablet:style":useStyle({mediaMinWidth:960})});return div2(["text:count",count_text],["click:event",count_inc],["click:style","color",count_color],["mobile:style","cursor","pointer"],["mobile:style","display","flex"],["mobile:style","gap","10px"],["mobile:style","fontSize","50px"],["tablet:style","fontSize","80px"])()},Example=()=>div(["style","alignItems","center"],["style","backgroundColor","rgba(255,255,255,0.2)"],["style","boxSizing","border-box"],["style","borderRadius","5px"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"],["style","padding","50px"],["style","width","100%"])(div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("Click The Number"),Counter()));var Code=txt=>span(["style","fontFamily","monospace"],["style","fontWeight","bold"],["style","opacity",1],["style","backgroundColor","rgba(0,0,0,0.2)"])(txt);var CustomTrait=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("Custom Traits"),div(["style","opacity",.5],["style","textAlign","center"])(`Creating a custom trait is easy to do and gives you a powerful abstraction for code reuse throughout your application. Here's an example of a simple "FlexBox" trait.`),div(["style","fontSize","21px"],["style","textAlign","center"])("Step 1: Create The Trait"),div(["style","opacity",.5],["style","textAlign","center"])("This is all it takes to create a custom trait. Create a function with an HTMLElement element as the first argument. You can also optionally follow that with any other parameters you want to make available to you when you use your trait."),div(["prism"])(`
const useMyFlexBox = (el: HTMLElement, dir: 'row' | 'column') => {
  el.style.display = 'flex';
  el.style.flexDirection = direction;
}`),div(["style","fontSize","21px"],["style","textAlign","center"])("Step 2: Attach The Trait To Your Template"),div(["style","opacity",.5],["style","textAlign","center"])("You attach the trait to your template like so. In this case 'flex' is user-defined and will be the name of your trait available to you in your tag function"),div(["prism"])(`const { div } = HTML({
  'flex': useMyFlexBox,
});`),div(["style","fontSize","21px"],["style","textAlign","center"])("Step 3: Using The Trait"),div(["style","opacity",.5],["style","textAlign","center"])("When using the div tag function from your template, 'flex' should be auto-magically intellisensed as well as the rest of the parameters of the ",Code("useMyFlexBox")," function"),div(["prism"])(`div(['flex', 'row'])("Hello World");`)));var Header=txt=>div(["style","backgroundColor","rgba(0,0,0,0.1)"],["style","padding","10px"])(txt),Cell=(...content)=>div(["style","padding","10px"],["style","borderBottom","1px solid rgba(0,0,0,0.1)"],["style","fontSize","13px"],["style:tablet","fontSize","16px"])(...content),FAQ=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("FAQ & More"),div(["style","opacity",.5],["style","textAlign","center"])("OEM can do a lot more than you might think. Here are some common issues and commonly asked questions."),div(["style","borderRadius","5px"],["style","boxSizing","border-box"],["style","display","grid"],["style","gridTemplateColumns","1fr 1fr"],["style","width","100%"])(Header("Question"),Header("Answer"),Cell("Is it secure?"),Cell("There is no insert html functionality"),Cell("What's a good use case?"),Cell("Creating reusable components for microfrontends"),Cell('Why is it said to be "AI friendly"?'),Cell("The formulaic and declarative nature of it makes it easy to parse and understand"),Cell("Does it support SVG?"),Cell("Yep, just use ",Code("SVG")," instead of ",Code("HTML")," as your template function"))));var Features=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","borderRadius","5px"],["style","display","grid"],["style","display","flex"],["style","flexWrap","wrap"],["style","fontFamily","Space Grotesk"],["style","gap","10px"],["style","justifyContent","center"],["style","padding","20px"],["style","width","100%"],["style","backgroundColor","black"])(...[["\u{1F4AB}","Reactive DOM"],["\u{1F485}","Responsive Styles"],["\u{1F4FC}","State Management"],["\u{1F54A}\uFE0F","No Dependencies"],["\u{1FAB6}","Flyweight Size"],["\u{1F9F1}","Isomorphic Syntax"],["\u{1F9E9}","Typescript"],["\u{1F916}","AI-Friendly"],["\u{1F512}","Secure"],["\u{1F9EA}","100% Test Coverage"],["\u{1F4A9}","No Virtual DOM"]].map(([icon,feature])=>div(["style","alignItems","center"],["style","backgroundColor","transparent"],["style","boxSizing","border-box"],["style","borderRadius","20px"],["style","cursor","pointer"],["style","display","flex"],["style","fontSize","13px"],["style","gap","10px"],["style","justifyContent","center"],["style:mouseover","backgroundColor","white"],["style:mouseover","color","black"],["style:mouseout","backgroundColor","transparent"],["style:mouseout","color","white"],["style","border","none"],["style","padding","0"],["style:tablet","border","1px solid rgba(255,255,255,0.3)"],["style:tablet","padding","5px 10px"],["style","color","white"])(span(["style","fontSize","11px"])(icon),span(["style","fontWeight","bold"])(feature))));var date=new Date,Footer=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("OEM"),div(["style","opacity",.5],["style","textAlign","center"])(`\xA9Copyright ${date.getFullYear()} All rights reserved.`," Made in the USA \u{1F1FA}\u{1F1F8} by ",a(["attr","href","http://kevinlint.com"],["attr","target","_blank"],["style","color","black"],["style:mouseover","color","blue"],["style:mouseout","color","black"])("Kevin Lint")," as a product of ",a(["attr","href","http://linttrap.media"],["attr","target","_blank"],["style","color","black"],["style:mouseover","color","blue"],["style:mouseout","color","black"])("Lint Trap Media."))));var Header2=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","fontFamily","Space Grotesk"],["style","justifyContent","center"],["style","padding","50px 50px 0"],["style","width","100%"],["style","padding","50px 20px 0"],["style:tablet","padding","50px 50px 0"])(a(["attr","href","https://github.com/linttrapmedia/oem"],["attr","target","_blank"],["style","alignItems","flex-start"],["style","background","linear-gradient(45deg, rgba(0,0,0,0.2) 50%, black 50%)"],["style","height","75px"],["style","justifyContent","flex-end"],["style","position","absolute"],["style","right",0],["style","top",0],["style","width","75px"],["style","display","flex"])(img(["attr","src","assets/gfx/github.svg"],["style","opacity",.5],["style","width","45%"],["style","padding","5px"])()),div(["style","display","flex"],["style","flexDirection","column"],["style","gap","30px"],["style","alignItems","center"],["style","justifyContent","center"])(div(["style","display","flex"],["style","letterSpacing","2px"],["style","fontSize","75px"],["style","textAlign","center"],["style","lineHeight",.75],["style","color","black"],["style","fontFamily","Splash"],["style","gap","5px"])("oem",span(["style","fontSize","10px"],["style","fontWeight","bold"],["style","fontFamily","monospace"],["style","letterSpacing","0"])("beta")),div(["style","fontSize","52px"],["style","lineHeight",1],["style","margin","0px 20px 10px 20px"],["style","borderRadius","10px"],["style","textAlign","center"],["style","fontSize","32px"],["style:tablet","fontSize","52px"])("A novel UI library for writing reactive html in vanilla javascript")));var HowItWorks=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("How It Works"),div(["style","opacity",.5],["style","textAlign","center"])("OEM works by introducing the idea of creating your own template engine(s) which exist as a middle layer between your state and your DOM. The result is code that is highly expressive, easy to read, and easy to maintain."),div(["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","justifyContent","center"],["style","gap","20px"],["style","width","100%"],["style:tablet","flexDirection","row"])(div(["style","display","flex"],["style","flexDirection","column"],["style","width","100%"],["style:tablet","width","50%"])(div(["style","textAlign","center"])("Step 1: Define State and Your Template Engine"),pre(["prism"])(`const count = State(1);
const count_inc = count.reduce((i) => i + 1);
const count_text = () => \`#\${count.get()}\`;
const count_color = () => (count.get() % 2 === 0 ? 'red' : 'black');

const { div } = HTML({
  'text:count': useText({state: count}),
  'click:event': useEvent('click'),
  'click:style': useStyle({ event: 'click' }),
  'mobile:style': useStyle({ mediaMinWidth: 0 }),
  'tablet:style': useStyle({ mediaMinWidth: 960 }),
});`)),div(["style","display","flex"],["style","flexDirection","column"],["style","width","100%"],["style:tablet","width","50%"])(div(["style","textAlign","center"])("Step 2:  Generate Your Reactive UI"),pre(["prism"])(`div(
  ['text:count', count_text],
  ['click:event', count_inc],
  ['click:style', 'color', count_color],
  ['mobile:style', 'cursor', 'pointer'],
  ['mobile:style', 'display', 'flex'],
  ['mobile:style', 'gap', '10px'],
  ['mobile:style', 'fontSize', '50px'],
  ['tablet:style', 'fontSize', '80px'],
)()`)))));var Install=()=>div(["style","flexDirection","column"],["style","gap","30px"],["style:tablet","flexDirection","row"],["style:tablet","gap","30px"],["style:tablet","padding","0px"],["style","alignItems","center"],["style","display","flex"],["style","fontFamily","Space Grotesk"],["style","justifyContent","center"])(div(["style","alignItems","center"],["style","border","2px solid black"],["style","borderRadius","20px"],["style","boxSizing","border-box"],["style","boxShadow","20px 20px 0px black"],["style","display","grid"],["style","flexWrap","wrap"],["style","justifyContent","center"],["style","padding","20px"],["style","textAlign","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("Why?"),div(["style","padding","20px 0"],["style","opacity",.5])("I wanted a standards-compliant, reliable, unchanging, lightweight reactive dom library that could serve as a layer one utility library to build out a suite of self-contained web components.")),div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","grid"],["style","flexWrap","wrap"],["style","gap","20px"],["style","justifyContent","center"],["style","padding","20px"],["style","width","100%"],["style:tablet","borderRight","1px dashed black"],["style","borderRight","none"],["style","borderBottom","1px dashed black"],["style:tablet","borderBottom","none"])(div(["style","fontSize","32px"],["style","textAlign","center"])("Install"),div(["style","opacity",.5],["style","textAlign","center"])("(Install the typescript library.)"),div(["prism"])("npm i @linttrap/oem"),div(["style","opacity",.35],["style","fontSize","14px"],["style","textAlign","center"])("Also available on CDN at ",a(["attr","href","https://unpkg.com/@linttrap/oem@latest/dist/oem.min.js"],["attr","target","_blank"])("unpkg"))));var Header3=txt=>div(["style","backgroundColor","rgba(0,0,0,0.1)"],["style","padding","10px"])(txt),Cell2=txt=>div(["style","padding","10px"],["style","borderBottom","1px solid rgba(0,0,0,0.1)"],["style","fontSize","13px"],["style:tablet","fontSize","16px"])(txt),Traits=()=>div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","justifyContent","center"])(div(["style","alignItems","center"],["style","boxSizing","border-box"],["style","display","flex"],["style","flexDirection","column"],["style","fontFamily","Space Grotesk"],["style","gap","20px"],["style","justifyContent","center"],["style","width","100%"])(div(["style","fontSize","32px"],["style","textAlign","center"])("Standard Traits"),div(["style","opacity",.5],["style","textAlign","center"])("Traits are functions that are responsible for attaching a single behavior and/or trait to an html element. The following is a list of all the standard traits that come with OEM by default."),div(["style","borderRadius","5px"],["style","boxSizing","border-box"],["style","display","grid"],["style","gridTemplateColumns","1fr 1fr"],["style","width","100%"])(Header3("Trait"),Header3("Description"),Cell2("useAttribute"),Cell2("Apply attributes"),Cell2("useClassName"),Cell2("Apply class names"),Cell2("useEvent"),Cell2("Attach event listener"),Cell2("useText"),Cell2("Apply inner text"),Cell2("useStyle"),Cell2("Apply styles"))));function App(){return div(["style","display","flex"],["style","flexDirection","column"],["style","gap","50px"],["style","boxSizing","border-box"],["style","padding","20px 20px 100px"],["style","margin","auto"],["style","maxWidth","1024px"])(Header2(),Features(),Install(),Example(),HowItWorks(),Traits(),CustomTrait(),FAQ(),Footer())}document.addEventListener("DOMContentLoaded",()=>{let root=document.getElementById("root");if(!root)return null;root.appendChild(App())});})();
//# sourceMappingURL=bundle.min.js.map
