{
  "version": 3,
  "sources": ["../src/html/HTML.ts", "../src/html/SVG.ts", "../src/html/traits/Attribute.ts", "../src/html/traits/ClassName.ts", "../src/html/traits/Event.ts", "../src/html/traits/InnerHTML.ts", "../src/html/traits/Style.ts", "../src/html/traits/TextContent.ts", "../src/state/State.ts"],
  "sourcesContent": ["import { HtmlReturnType } from '../types';\n\nconst selectorMap = new Map<string, [any[], any]>();\n\nconst matchObserver = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.addedNodes.length > 0 && mutation.type === 'childList') {\n      for (const node of mutation.addedNodes) {\n        if (node instanceof Element) {\n          for (const [selector, [props, config]] of selectorMap.entries()) {\n            const els = node.querySelectorAll(selector);\n            for (const el of els) HtmlTag(el as HTMLElement, props, config);\n          }\n        }\n      }\n    }\n  });\n});\nmatchObserver.observe(document, { attributes: true, childList: true, subtree: true });\n\nfunction AdoptElBySelector(selector: string, watch: boolean = true, config: any) {\n  return (...props: any[]) => {\n    // on mutation\n    if (watch) selectorMap.set(selector, [props, config]);\n    // onload\n    const els = document.querySelectorAll(selector);\n    for (const el of els) HtmlTag(el as HTMLElement, props, config);\n  };\n}\n\nfunction AdoptElByInstance(el: HTMLElement, config: any) {\n  return (...props: any[]) => HtmlTag(el, props, config);\n}\n\nfunction CreateEl(tag: string, config: any) {\n  return (...props: any[]) => {\n    const ns = 'http://www.w3.org/1999/xhtml';\n    const el = document.createElementNS(ns, tag as string);\n    return HtmlTag(el, props, config);\n  };\n}\n\nfunction HtmlTag(el: HTMLElement, traits: any[] = [], config: any = {}) {\n  traits.forEach(([trait, ...args]) => config[trait](el, ...args));\n  function fn(...children: any[]) {\n    children.forEach((child) => el.append(child));\n    return el;\n  }\n  return fn;\n}\n\nexport function HTML<P extends Record<string, any>>(config?: P) {\n  return new Proxy(\n    {},\n    {\n      get: (_, prop) => {\n        if (prop === 'el') return (el: HTMLElement) => AdoptElByInstance(el, config);\n        if (prop === '$el') return (selector: string, watch: boolean) => AdoptElBySelector(selector, watch, config);\n        return CreateEl(prop as string, config);\n      },\n    },\n  ) as HtmlReturnType<P>;\n}\n", "import { SvgReturnType } from '../types';\n\nfunction SvgTag(el: SVGElement, traits: any[] = [], config: any = {}) {\n  traits.forEach(([trait, ...args]) => config[trait](el, ...args));\n  function fn(...children: any[]) {\n    children.forEach((child) => el.append(child));\n    return el;\n  }\n  return fn;\n}\n\nexport function SVG<P extends Record<string, any>>(config?: P) {\n  return new Proxy(\n    {},\n    {\n      get: (_, prop) => {\n        if (prop === 'el')\n          return (el: SVGElement) =>\n            (...props: any[]) =>\n              SvgTag(el, props, config);\n        return (...props: any[]) => {\n          const ns = 'http://www.w3.org/2000/svg';\n          const el = document.createElementNS(ns, prop as string);\n          return SvgTag(el, props, config);\n        };\n      },\n    },\n  ) as SvgReturnType<P>;\n}\n", "import { StateType } from '../../types';\n\ntype UseAttributeProps<T> = {\n  event?: keyof GlobalEventHandlersEventMap | null;\n  eventElement?: HTMLElement | Window;\n  hideOnFalse?: boolean;\n  invokeImmediately?: boolean;\n  mediaMaxWidth?: number;\n  mediaMinWidth?: number;\n  state?: StateType<T>;\n};\n\nexport function useAttribute(\n  props?: UseAttributeProps<any>,\n): (\n  el: HTMLElement,\n  prop: string,\n  val: (() => string | number | boolean) | (string | number | boolean),\n  condition?: boolean | (() => boolean),\n) => void;\n\nexport function useAttribute<T>(\n  props?: UseAttributeProps<T>,\n): (\n  el: HTMLElement,\n  prop: string,\n  val: ((state: T) => string | number | boolean) | (string | number | boolean),\n  condition?: ((state: T) => boolean) | boolean,\n) => void;\n\nexport function useAttribute<T>(props?: UseAttributeProps<T>) {\n  const {\n    event = null,\n    eventElement = window,\n    hideOnFalse = true,\n    invokeImmediately = true,\n    mediaMinWidth = 0,\n    mediaMaxWidth = Infinity,\n    state = undefined,\n  } = props ?? {};\n  return (...htmlProps: any) => {\n    const [el, prop, val, condition] = htmlProps;\n    // application\n    const apply = () => {\n      const isInBreakpoint = window.innerWidth >= mediaMinWidth && window.innerWidth <= mediaMaxWidth;\n      if (!isInBreakpoint) return;\n      const _val = state && typeof val === 'function' ? val(state.get()) : val;\n      const _isBool = String(_val) === 'true' || String(_val) === 'false';\n      const _condition =\n        typeof condition === 'function' ? condition(state ? state.get() : undefined) : condition ?? true;\n      if (_isBool && hideOnFalse && String(_val) === 'false') return el.removeAttribute(prop);\n      if (_isBool && _condition === false) return el.removeAttribute(prop);\n      if (_condition === false) return;\n      el.setAttribute(prop, String(_val));\n    };\n\n    // handle state changes\n    if (state) state.sub(apply);\n\n    // handle event changes\n    if (event) (el ?? eventElement).addEventListener(event, apply);\n\n    // handle breakpoint changes\n    window.addEventListener('resize', apply);\n\n    // apply immediately\n    if (invokeImmediately) apply();\n  };\n}\n", "import { StateType } from '../../types';\n\ntype UseClassNameProps<T> = {\n  event?: keyof GlobalEventHandlersEventMap | null;\n  eventElement?: HTMLElement | Window;\n  invokeImmediately?: boolean;\n  mediaMaxWidth?: number;\n  mediaMinWidth?: number;\n  mediaType?: 'screen' | 'print';\n  state?: StateType<T> | null;\n};\n\nexport function useClassName(\n  props?: UseClassNameProps<any>,\n): (el: HTMLElement, className: string | (() => string), condition?: boolean | (() => boolean)) => void;\n\nexport function useClassName<T>(\n  props?: UseClassNameProps<T>,\n): (el: HTMLElement, className: string | ((state: T) => string), condition?: boolean | ((state: T) => boolean)) => void;\n\nexport function useClassName<T>(props?: UseClassNameProps<T>) {\n  const {\n    event = null,\n    eventElement = window,\n    invokeImmediately = true,\n    mediaMinWidth = 0,\n    mediaMaxWidth = Infinity,\n    state = null,\n  } = props ?? {};\n  return (...htmlProps: any) => {\n    const [el, className, condition] = htmlProps;\n    // application\n    const apply = () => {\n      const isInBreakpoint = window.innerWidth >= mediaMinWidth && window.innerWidth <= mediaMaxWidth;\n      if (!isInBreakpoint) return;\n      const _className = typeof className === 'function' ? className(state ? state.get() : undefined) : className;\n      const _condition =\n        typeof condition === 'function' ? condition(state ? state.get() : undefined) : condition ?? true;\n      if (_condition) el.setAttribute('class', _className);\n    };\n\n    // handle state changes\n    if (state) state.sub(apply);\n\n    // handle event changes\n    if (event) (el ?? eventElement).addEventListener(event, apply);\n\n    // handle breakpoint changes\n    window.addEventListener('resize', apply);\n\n    // apply immediately\n    if (invokeImmediately) apply();\n  };\n}\n", "export const useEvent =\n  <E extends keyof GlobalEventHandlersEventMap>(evt: E) =>\n  (el: HTMLElement, cb: (evt: GlobalEventHandlersEventMap[E]) => any, condition?: (() => boolean) | boolean) => {\n    (typeof condition === 'function' ? condition() : condition ?? true) ? el.addEventListener(evt, cb) : null;\n  };\n", "import { StateType } from '../../types';\n\ntype UseInnerHTMLProps<T> = {\n  state: StateType<T>;\n};\n\nexport function useInnerHTML<T>({\n  state,\n}: UseInnerHTMLProps<T>): (\n  el: HTMLElement,\n  children: (state: T) => string | number | HTMLElement | (string | number | HTMLElement)[],\n  condition?: ((state: T) => boolean) | boolean,\n) => void;\n\nexport function useInnerHTML(): (\n  el: HTMLElement,\n  children: () => string | number | HTMLElement | (string | number | HTMLElement)[],\n  condition?: (() => boolean) | boolean,\n) => void;\n\nexport function useInnerHTML<T>(props?: UseInnerHTMLProps<T>) {\n  const { state } = props ?? {};\n  return (...htmlProps: any) => {\n    const [el, children, condition] = htmlProps;\n    const apply = () => {\n      el.innerHTML = '';\n      const _children = state ? children(state.get()) : children();\n      const _condition =\n        typeof condition === 'function' ? condition(state ? state.get() : undefined) : condition ?? true;\n      if (_condition) {\n        el.innerHTML = '';\n        if (Array.isArray(_children)) {\n          _children.forEach((c) => {\n            if (c instanceof HTMLElement) el.appendChild(c);\n            else el.appendChild(document.createTextNode(String(c)));\n          });\n        } else if (_children instanceof HTMLElement) {\n          el.appendChild(_children);\n        } else {\n          el.innerHTML = String(_children);\n        }\n      }\n    };\n    if (state) state.sub(apply);\n    apply();\n  };\n}\n", "import { StateType } from '../../types';\n\ntype UseStyleProps<T> = {\n  event?: keyof GlobalEventHandlersEventMap | null;\n  eventElement?: HTMLElement | Window;\n  invokeImmediately?: boolean;\n  mediaMaxWidth?: number;\n  mediaMinWidth?: number;\n  mediaType?: 'screen' | 'print';\n  state?: StateType<T>;\n};\n\nexport function useStyle(\n  props?: UseStyleProps<any>,\n): (\n  el: HTMLElement,\n  prop: keyof CSSStyleDeclaration,\n  val: (() => string | number) | (string | number),\n  condition?: boolean | (() => boolean),\n) => void;\n\nexport function useStyle<T>(\n  props?: UseStyleProps<T>,\n): (\n  el: HTMLElement,\n  prop: keyof CSSStyleDeclaration,\n  val: ((state: T) => string | number) | (string | number),\n  condition?: boolean | ((state: T) => boolean),\n) => void;\n\nexport function useStyle<T>(props?: UseStyleProps<T>) {\n  const {\n    event = null,\n    eventElement = window,\n    invokeImmediately = true,\n    mediaMinWidth = 0,\n    mediaMaxWidth = Infinity,\n    state = undefined,\n  } = props ?? {};\n  return (...htmlProps: any) => {\n    const [el, prop, val, condition] = htmlProps;\n    const apply = () => {\n      const isInBreakpoint = window.innerWidth >= mediaMinWidth && window.innerWidth <= mediaMaxWidth;\n      if (!isInBreakpoint) return;\n      const _val = String(typeof val === 'function' ? val(state ? state.get() : undefined) : val);\n      const _condition =\n        typeof condition === 'function' ? condition(state ? state.get() : undefined) : condition ?? true;\n      _condition ? (el.style[prop as any] = _val as any) : null;\n    };\n\n    // handle state changes\n    if (state) state.sub(apply);\n\n    // handle resize changes\n    window.addEventListener('resize', apply);\n\n    // handle event changes\n    if (event) (el ?? eventElement).addEventListener(event, apply);\n\n    // apply immediately\n    if (invokeImmediately && !event) apply();\n  };\n}\n", "import { StateType } from '../../types';\n\ntype UseTextContentProps<T> = {\n  state: StateType<T>;\n};\n\nexport function useTextContent<T>({\n  state,\n}: UseTextContentProps<T>): (\n  el: HTMLElement,\n  children: ((state: T) => string | number) | string | number,\n  condition?: ((state: T) => boolean) | boolean,\n) => void;\n\nexport function useTextContent(): (\n  el: HTMLElement,\n  children: (() => string | number) | string | number,\n  condition?: (() => boolean) | boolean,\n) => void;\n\nexport function useTextContent<T>(props?: UseTextContentProps<T>) {\n  const { state } = props ?? {};\n  return (...htmlProps: any) => {\n    const [el, children, condition] = htmlProps;\n    const apply = () => {\n      el.innerHTML = '';\n      const _children = typeof children === 'function' ? children(state ? state.get() : undefined) : children;\n      const _condition =\n        typeof condition === 'function' ? condition(state ? state.get() : undefined) : condition ?? true;\n      if (_condition) {\n        el.textContent = String(_children);\n      }\n    };\n    if (state) state.sub(apply);\n    apply();\n  };\n}\n", "import { StateType } from '../types';\n\nexport function State<T>(param: T): StateType<T> {\n  const originalParam: T = param;\n  let _param: T = param;\n  const _subscribers: ((param: T) => any)[] = [];\n  const _get = (): T => _param;\n  const _reduce = (cb: (param: T) => T) => () => _set(cb(_param));\n  const _reset = () => _set(originalParam);\n  const _set = (param: T) => ((_param = param), _subscribers.forEach((i) => i(_param)));\n  const _sub = (cb: (param: T) => any) => _subscribers.push(cb);\n  const _unsub = (cb: (param: T) => any) => _subscribers.splice(_subscribers.indexOf(cb), 1);\n  return { get: _get, reset: _reset, reduce: _reduce, set: _set, sub: _sub, unsub: _unsub };\n}\n"],
  "mappings": "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",
  "names": ["param"]
}
